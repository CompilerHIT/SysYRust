inst_ref: ConstInt(893)
inst_ref: ConstInt(716)
inst_ref: ConstInt(837)
inst_ref: ConstInt(128)
inst_ref: Binary(Add)
inst_ref: Binary(Add)
inst_ref: ConstInt(241)
inst_ref: Binary(Add)
inst_ref: ConstInt(412)
inst_ref: Binary(Sub)
lhs_reg: Reg(Reg { id: 7, r_type: Int })
rhs_reg: IImm(IImm { data: -412 })
inst_ref: ConstInt(771)
inst_ref: Binary(Add)
inst_ref: ConstInt(18)
inst_ref: Binary(Sub)
lhs_reg: Reg(Reg { id: 9, r_type: Int })
rhs_reg: IImm(IImm { data: -18 })
inst_ref: ConstInt(66)
inst_ref: Binary(Add)
inst_ref: Binary(Add)
inst_ref: ConstInt(33)
inst_ref: Binary(Sub)
lhs_reg: Reg(Reg { id: 13, r_type: Int })
rhs_reg: IImm(IImm { data: -33 })
inst_ref: ConstInt(55)
inst_ref: Binary(Sub)
lhs_reg: Reg(Reg { id: 14, r_type: Int })
rhs_reg: IImm(IImm { data: -55 })
inst_ref: Binary(Add)
inst_ref: ConstInt(21)
inst_ref: Binary(Rem)
inst_ref: Return
inst_ref: Binary(Add)
inst_ref: ConstInt(97)
inst_ref: Binary(Sub)
lhs_reg: Reg(Reg { id: 18, r_type: Int })
rhs_reg: IImm(IImm { data: -97 })
inst_ref: Binary(Sub)
lhs_reg: Reg(Reg { id: 6, r_type: Int })
rhs_reg: Reg(Reg { id: 19, r_type: Int })
inst_ref: ConstInt(62)
inst_ref: Binary(Rem)
inst_ref: Binary(Add)
inst_ref: ConstInt(17)
inst_ref: Binary(Rem)
inst_ref: Return
inst_ref: Binary(Add)
inst_ref: ConstInt(13)
inst_ref: Binary(Rem)
inst_ref: Return
inst_ref: Binary(Mul)
inst_ref: ConstInt(83)
inst_ref: Binary(Rem)
inst_ref: Binary(Add)
inst_ref: ConstInt(771)
inst_ref: Binary(Sub)
lhs_reg: Reg(Reg { id: 29, r_type: Int })
rhs_reg: IImm(IImm { data: -771 })
inst_ref: Binary(Add)
inst_ref: ConstInt(11)
inst_ref: Binary(Rem)
inst_ref: Return
allocate reg fun: main
start


OpReg(Li)	[Reg { id: 5, r_type: Int }]	[Reg { id: 5, r_type: Int }]


Binary(Add)	[Reg { id: 3, r_type: Int }]	[Reg { id: 5, r_type: Int }, Reg { id: 3, r_type: Int }]


Binary(Add)	[Reg { id: 6, r_type: Int }]	[Reg { id: 3, r_type: Int }, Reg { id: 6, r_type: Int }]


Binary(Add)	[Reg { id: 7, r_type: Int }]	[Reg { id: 3, r_type: Int }, Reg { id: 7, r_type: Int }]


Binary(Add)	[Reg { id: 8, r_type: Int }]	[Reg { id: 7, r_type: Int }, Reg { id: 8, r_type: Int }]


OpReg(Li)	[Reg { id: 10, r_type: Int }]	[Reg { id: 10, r_type: Int }]


Binary(Add)	[Reg { id: 9, r_type: Int }]	[Reg { id: 10, r_type: Int }, Reg { id: 9, r_type: Int }]


Binary(Add)	[Reg { id: 11, r_type: Int }]	[Reg { id: 9, r_type: Int }, Reg { id: 11, r_type: Int }]


Binary(Add)	[Reg { id: 12, r_type: Int }]	[Reg { id: 11, r_type: Int }, Reg { id: 12, r_type: Int }]


Binary(Add)	[Reg { id: 13, r_type: Int }]	[Reg { id: 8, r_type: Int }, Reg { id: 11, r_type: Int }, Reg { id: 13, r_type: Int }]


Binary(Add)	[Reg { id: 14, r_type: Int }]	[Reg { id: 13, r_type: Int }, Reg { id: 14, r_type: Int }]


Binary(Add)	[Reg { id: 15, r_type: Int }]	[Reg { id: 14, r_type: Int }, Reg { id: 15, r_type: Int }]


Binary(Add)	[Reg { id: 16, r_type: Int }]	[Reg { id: 14, r_type: Int }, Reg { id: 15, r_type: Int }, Reg { id: 16, r_type: Int }]


OpReg(IMv)	[Reg { id: 10, r_type: Int }]	[Reg { id: 17, r_type: Int }, Reg { id: 10, r_type: Int }]


Ret(Int)	[Reg { id: 10, r_type: Int }]	[]


Binary(Add)	[Reg { id: 18, r_type: Int }]	[Reg { id: 15, r_type: Int }, Reg { id: 6, r_type: Int }, Reg { id: 18, r_type: Int }]


Binary(Add)	[Reg { id: 19, r_type: Int }]	[Reg { id: 18, r_type: Int }, Reg { id: 19, r_type: Int }]


Binary(Sub)	[Reg { id: 20, r_type: Int }]	[Reg { id: 19, r_type: Int }, Reg { id: 6, r_type: Int }, Reg { id: 20, r_type: Int }]


Binary(Add)	[Reg { id: 22, r_type: Int }]	[Reg { id: 21, r_type: Int }, Reg { id: 19, r_type: Int }, Reg { id: 22, r_type: Int }]


OpReg(IMv)	[Reg { id: 10, r_type: Int }]	[Reg { id: 23, r_type: Int }, Reg { id: 10, r_type: Int }]


Ret(Int)	[Reg { id: 10, r_type: Int }]	[]


Binary(Add)	[Reg { id: 24, r_type: Int }]	[Reg { id: 21, r_type: Int }, Reg { id: 19, r_type: Int }, Reg { id: 24, r_type: Int }]


OpReg(IMv)	[Reg { id: 10, r_type: Int }]	[Reg { id: 25, r_type: Int }, Reg { id: 10, r_type: Int }]


Ret(Int)	[Reg { id: 10, r_type: Int }]	[]


OpReg(IMv)	[Reg { id: 27, r_type: Int }]	[Reg { id: 27, r_type: Int }]


Binary(Mul)	[Reg { id: 26, r_type: Int }]	[Reg { id: 27, r_type: Int }, Reg { id: 21, r_type: Int }, Reg { id: 26, r_type: Int }]


Binary(Add)	[Reg { id: 29, r_type: Int }]	[Reg { id: 21, r_type: Int }, Reg { id: 28, r_type: Int }, Reg { id: 29, r_type: Int }]


Binary(Add)	[Reg { id: 30, r_type: Int }]	[Reg { id: 29, r_type: Int }, Reg { id: 30, r_type: Int }]


Binary(Add)	[Reg { id: 31, r_type: Int }]	[Reg { id: 30, r_type: Int }, Reg { id: 28, r_type: Int }, Reg { id: 31, r_type: Int }]


OpReg(IMv)	[Reg { id: 10, r_type: Int }]	[Reg { id: 32, r_type: Int }, Reg { id: 10, r_type: Int }]


Ret(Int)	[Reg { id: 10, r_type: Int }]	[]
finish
map_size: 32
start second allocate reg
allocate reg fun: main
start


OpReg(Li)	[Reg { id: 5, r_type: Int }]	[Reg { id: 5, r_type: Int }]


Binary(Add)	[Reg { id: 3, r_type: Int }]	[Reg { id: 5, r_type: Int }, Reg { id: 3, r_type: Int }]


Binary(Add)	[Reg { id: 6, r_type: Int }]	[Reg { id: 3, r_type: Int }, Reg { id: 6, r_type: Int }]


Binary(Add)	[Reg { id: 7, r_type: Int }]	[Reg { id: 3, r_type: Int }, Reg { id: 7, r_type: Int }]


Binary(Add)	[Reg { id: 8, r_type: Int }]	[Reg { id: 7, r_type: Int }, Reg { id: 8, r_type: Int }]


OpReg(Li)	[Reg { id: 10, r_type: Int }]	[Reg { id: 10, r_type: Int }]


Binary(Add)	[Reg { id: 9, r_type: Int }]	[Reg { id: 10, r_type: Int }, Reg { id: 9, r_type: Int }]


Binary(Add)	[Reg { id: 11, r_type: Int }]	[Reg { id: 9, r_type: Int }, Reg { id: 11, r_type: Int }]


Binary(Add)	[Reg { id: 12, r_type: Int }]	[Reg { id: 11, r_type: Int }, Reg { id: 12, r_type: Int }]


Binary(Add)	[Reg { id: 13, r_type: Int }]	[Reg { id: 8, r_type: Int }, Reg { id: 11, r_type: Int }, Reg { id: 13, r_type: Int }]


Binary(Add)	[Reg { id: 14, r_type: Int }]	[Reg { id: 13, r_type: Int }, Reg { id: 14, r_type: Int }]


Binary(Add)	[Reg { id: 15, r_type: Int }]	[Reg { id: 14, r_type: Int }, Reg { id: 15, r_type: Int }]


Binary(Add)	[Reg { id: 16, r_type: Int }]	[Reg { id: 14, r_type: Int }, Reg { id: 15, r_type: Int }, Reg { id: 16, r_type: Int }]


OpReg(IMv)	[Reg { id: 10, r_type: Int }]	[Reg { id: 17, r_type: Int }, Reg { id: 10, r_type: Int }]


Ret(Int)	[Reg { id: 10, r_type: Int }]	[]


Binary(Add)	[Reg { id: 18, r_type: Int }]	[Reg { id: 15, r_type: Int }, Reg { id: 6, r_type: Int }, Reg { id: 18, r_type: Int }]


Binary(Add)	[Reg { id: 19, r_type: Int }]	[Reg { id: 18, r_type: Int }, Reg { id: 19, r_type: Int }]


Binary(Sub)	[Reg { id: 20, r_type: Int }]	[Reg { id: 19, r_type: Int }, Reg { id: 6, r_type: Int }, Reg { id: 20, r_type: Int }]


Binary(Add)	[Reg { id: 22, r_type: Int }]	[Reg { id: 21, r_type: Int }, Reg { id: 19, r_type: Int }, Reg { id: 22, r_type: Int }]


OpReg(IMv)	[Reg { id: 10, r_type: Int }]	[Reg { id: 23, r_type: Int }, Reg { id: 10, r_type: Int }]


Ret(Int)	[Reg { id: 10, r_type: Int }]	[]


Binary(Add)	[Reg { id: 24, r_type: Int }]	[Reg { id: 21, r_type: Int }, Reg { id: 19, r_type: Int }, Reg { id: 24, r_type: Int }]


OpReg(IMv)	[Reg { id: 10, r_type: Int }]	[Reg { id: 25, r_type: Int }, Reg { id: 10, r_type: Int }]


Ret(Int)	[Reg { id: 10, r_type: Int }]	[]


OpReg(IMv)	[Reg { id: 27, r_type: Int }]	[Reg { id: 27, r_type: Int }]


Binary(Mul)	[Reg { id: 26, r_type: Int }]	[Reg { id: 27, r_type: Int }, Reg { id: 21, r_type: Int }, Reg { id: 26, r_type: Int }]


Binary(Add)	[Reg { id: 29, r_type: Int }]	[Reg { id: 21, r_type: Int }, Reg { id: 28, r_type: Int }, Reg { id: 29, r_type: Int }]


Binary(Add)	[Reg { id: 30, r_type: Int }]	[Reg { id: 29, r_type: Int }, Reg { id: 30, r_type: Int }]


Binary(Add)	[Reg { id: 31, r_type: Int }]	[Reg { id: 30, r_type: Int }, Reg { id: 28, r_type: Int }, Reg { id: 31, r_type: Int }]


OpReg(IMv)	[Reg { id: 10, r_type: Int }]	[Reg { id: 32, r_type: Int }, Reg { id: 10, r_type: Int }]


Ret(Int)	[Reg { id: 10, r_type: Int }]	[]
finish
map_size: 32
start handle spill
start generate
32
{28: 28, 25: 25, 6: 6, 9: 9, 17: 17, 0: 0, 1: 1, 23: 23, 5: 5, 11: 11, 19: 19, 27: 27, 10: 10, 15: 15, 4: 4, 22: 22, 13: 13, 26: 26, 12: 12, 16: 16, 21: 21, 30: 30, 7: 7, 31: 31, 3: 3, 20: 20, 18: 18, 24: 24, 29: 29, 2: 2, 8: 8, 14: 14}
